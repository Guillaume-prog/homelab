services:
    # Proxy
    proxy:
        image: jc21/nginx-proxy-manager:latest
        container_name: nginx-proxy-manager
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
        volumes:
            - {{ config_config_path }}/proxy/data:/data
            - {{ config_config_path }}/proxy/letsencrypt:/etc/letsencrypt
        ports:
            - 81:81
            - 80:80
            - 443:443
        restart: unless-stopped

    # Plex config
    plex:
        image: lscr.io/linuxserver/plex:latest
        container_name: plex
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
            - VERSION=docker
        volumes:
            - {{ config_config_path }}/plex:/config
            - {{ config_tv_path }}:/tv
            - {{ config_movies_path }}:/movies
        network_mode: "host"
        devices:
            - /dev/dri:/dev/dri
        restart: unless-stopped

    qbittorrent:
        image: dyonr/qbittorrentvpn
        container_name: qbittorrent
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - VPN_ENABLED=yes
            - VPN_TYPE=openvpn
            - LAN_NETWORK=192.168.1.0/24
            - NAME_SERVERS=1.1.1.1,1.0.0.1
            - ENABLE_SSL=no
            - HEALTH_CHECK_HOST=one.one.one.one
        volumes:
            - {{ config_config_path }}/qbittorrent:/config
            - {{ config_download_path }}:/downloads
        ports:
            - 8080:8080
        privileged: true
        restart: unless-stopped

    sonarr:
        image: lscr.io/linuxserver/sonarr:latest
        container_name: sonarr
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
        volumes:
            - {{ config_config_path }}/sonarr:/config
            - {{ config_tv_path }}:/tv:rw
            - {{ config_download_path }}:/downloads
        ports:
            - 8989:8989
        restart: unless-stopped

    radarr:
        image: lscr.io/linuxserver/radarr:latest
        container_name: radarr
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
        volumes:
            - {{ config_config_path }}/radarr:/config
            - {{ config_movies_path }}:/movies:rw
            - {{ config_download_path }}:/downloads
        ports:
            - 7878:7878
        restart: unless-stopped

    flaresolverr:
      image: ghcr.io/flaresolverr/flaresolverr:latest
      container_name: flaresolverr
      environment:
        - LOG_LEVEL = "info";
      ports:
        - 8191:8191

    prowlarr:
        image: lscr.io/linuxserver/prowlarr:latest
        container_name: prowlarr
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
        volumes:
            - {{ config_config_path }}/prowlarr:/config
        ports:
            - 9696:9696
        restart: unless-stopped

    overseerr:
        image: lscr.io/linuxserver/overseerr:latest
        container_name: overseerr
        environment:
            - PUID={{ config_uid }}
            - PGID={{ config_gid }}
            - TZ={{ config_timezone }}
        volumes:
            - {{ config_config_path }}/overseerr:/config
        ports:
            - 5055:5055
        restart: unless-stopped

    # Dashboard
    homarr:
        image: ghcr.io/homarr-labs/homarr:latest
        container_name: homarr
        environment:
            - SECRET_ENCRYPTION_KEY={{ config_homarr_key }}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - {{ config_config_path }}/homarr:/appdata
        ports:
            - '7575:7575'
        restart: unless-stopped

    # Auto updates docker images
    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock